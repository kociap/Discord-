language: cpp
dist: trusty

#addons:
#    apt:
#        sources:
#            # Ubuntu testing
#            - ubuntu-toolchain-r-test
#            # clang
#            - llvm-toolchain-trusty-6.0
#        packages:
#            # C++17
#            #- g++-8
#            #- clang-6.0
#            # gdb
#            #- gdb
#            # ninja
#            #- ninja-build

cache:
    ccache: true

before_install:
    ## tell apt to allow parallel downloads
    #- sudo sh -c "echo 'Acquire::Queue-Mode "host";' >> /etc/apt/apt.conf"
    ## gcc
    #- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
    ## clang
    #- export PATH=$(echo $PATH | sed 's/:\/usr\/local\/clang-5.0.0\/bin//g')
    #- sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 90
    ## ld
    #- sudo add-apt-repository -y ppa:jonathonf/binutils
    #- PACKAGES=${PACKAGES}"binutils "
    ## Qt
    #- sudo add-apt-repository -y ppa:beineri/opt-qt-5.10.1-trusty
    #- PACKAGES=${PACKAGES}"qt510base qt510webengine"
    ## Update sources
    #- sudo apt-get update

install:
    #install packages
    #- sudo apt-get install ${PACKAGES}
    # ccache
    - sudo ln -s $(which ccache) /usr/lib/ccache/clang++
    # cmake
    - wget -q http://www.cmake.org/files/v3.12/cmake-3.12.1.tar.gz
    - tar -xzf cmake-3.12.1.tar.gz
    - cd cmake-3.12.1/
    - ./configure | grep -v - -- || true
    - make -j $(nproc) > /dev/null
    - sudo make install > /dev/null
    - PATH=/usr/local/bin:${PATH}
    - export PATH
    - which cmake
    - cmake --version
    - /usr/local/bin/cmake --version
    - cd ..
    - false

before_script:
    # Display
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    # Qt
    - source /opt/qt510/bin/qt510-env.sh
    - export QT_FATAL_WARNINGS=1
    # Sanitizer settings
    - export ASAN_SYMBOLIZER_PATH=/usr/local/clang-5.0.0/bin/llvm-symbolizer
    - export UBSAN_OPTIONS=print_stacktrace=1
    - export LSAN_OPTIONS=suppressions=../lsan.supp #ignore Qt's memory leaks
    # print versions
    - g++ --version
    - gcc --version
    - clang++ --version
    - cmake --version
    - ninja --version
    - gdb --version
    - ld --version
    - echo $PATH
    - $ASAN_SYMBOLIZER_PATH --version
    # debug stuff
    - sudo updatedb
    - locate llvm-symbolizer

script:
    # compile with gcc
    - mkdir build
    - cd build
    - export CXX=g++
    - cmake -DCMAKE_BUILD_TYPE=DEBUG -G Ninja .. | grep -v -- "^--" || true
    - cmake --build .
    - cd ..
    - rm -R build
    #compile with clang
    - mkdir build
    - cd build
    - export CXX=g++
    - cmake -DCMAKE_BUILD_TYPE=DEBUG -G Ninja .. | grep -v -- "^--" || true
    - cmake --build .
    - cd ..
    - rm -R build

after_script:
    # ccache stats
    - ccache -s

after_success:
    # Discord webhook
    - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh success $DISCORD_WEBHOOK

after_failure:
    # Discord webhook
    - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh failure $DISCORD_WEBHOOK